plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'
    id 'kotlin-android'
    id 'kotlin-kapt'
    id 'kotlin-parcelize'
//    id 'miaow'
}

android {
    namespace 'com.example.fragment.project'
    compileSdk Integer.valueOf(gradle.compileSdkVersion)

    defaultConfig {
        applicationId gradle.applicationId
        minSdk Integer.valueOf(gradle.minSdkVersion)
        targetSdk Integer.valueOf(gradle.targetSdkVersion)
        versionCode Integer.valueOf(gradle.versionCode)
        versionName gradle.versionName

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        vectorDrawables {
            useSupportLibrary true
        }
    }

    signingConfigs {
        sign {
            storeFile file("../keystore.key")
            storePassword "111111"
            keyAlias "zzzzzz"
            keyPassword "111111"
        }
    }

    buildTypes {
        release {
            debuggable false
            // 启用代码压缩、优化及混淆
            minifyEnabled true
            // 启用资源压缩，需配合 minifyEnabled=true 使用
            shrinkResources true
            // 指定混淆保留规则
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.sign
        }
        debug {
            debuggable true
            minifyEnabled false
            shrinkResources false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.sign
            //禁用PNG压缩。
            crunchPngs false
            //停用Crashlytics，以提高调试 build 的构建速度
            ext.enableCrashlytics = false
        }
    }

    flavorDimensions.add('default')

    //获取渠道信息：Context.getMetaData("app_channel")
    //创建产品风味
    productFlavors {
        create("huawei") {
            //应用包名添加后缀
            applicationIdSuffix ".huawei"
            //关联维度
            dimension = "default"
            manifestPlaceholders = [
                    app_channel_value: name,
                    app_name_value   : "玩Android",
            ]
        }
    }

    applicationVariants.all {
        outputs.all {
            outputFileName = "wan-${buildType.name}-${versionName}-${productFlavors[0]['name']}.apk"
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    kotlinOptions {
        jvmTarget = "1.8"
    }

    buildFeatures {
        compose true
    }

    composeOptions {
        kotlinCompilerExtensionVersion = "${compose_version}"
    }

    packagingOptions {
        resources {
            excludes += '/META-INF/{AL2.0,LGPL2.1}'
        }
    }
}

kapt {
    useBuildCache = true
    // 增加注解处理器的最大错误次数,默认为 100。
    javacOptions {
        option("-Xmaxerrs", 500)
    }
}

dependencies {
    implementation project(path: ':library-base')
    implementation project(path: ':library-picture')
    // 单元测试
    testImplementation "junit:junit:$junit_version"
    testImplementation "io.mockk:mockk:$mockk_version"
    //对于runBlockingTest, CoroutineDispatcher等
    testImplementation "org.jetbrains.kotlinx:kotlinx-coroutines-test:$coroutines_test_version"
    //对于InstantTaskExecutorRule
    testImplementation "androidx.arch.core:core-testing:$androidx_testing_version"
    androidTestImplementation "androidx.test.ext:junit:$androidx_junit_version"
    androidTestImplementation "androidx.test.espresso:espresso-core:$androidx_espresso_version"
}