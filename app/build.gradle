plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'
    id 'kotlin-android'
    id 'kotlin-kapt'
    id 'kotlin-parcelize'
    id 'miaow'
}

android {
    compileSdk Integer.valueOf(gradle.compileSdkVersion)

    defaultConfig {
        applicationId gradle.applicationId
        minSdk Integer.valueOf(gradle.minSdkVersion)
        targetSdk Integer.valueOf(gradle.targetSdkVersion)
        versionCode Integer.valueOf(gradle.versionCode)
        versionName gradle.versionName

        javaCompileOptions {
            annotationProcessorOptions {
                arguments += [
                        "room.schemaLocation"  : "$projectDir/schemas".toString(),
                        "room.incremental"     : "true",
                        "room.expandProjection": "true"
                ]
            }
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_11
        targetCompatibility JavaVersion.VERSION_11
    }

    kotlinOptions {
        jvmTarget = "11"
    }

    viewBinding {
        enabled = true
    }

    signingConfigs {
        sign {
            storeFile file("../keystore.key")
            storePassword "111111"
            keyAlias "zzzzzz"
            keyPassword "111111"
        }
    }

    buildTypes {
        release {
            debuggable false
            // 启用代码压缩、优化及混淆
            minifyEnabled true
            // 启用资源压缩，需配合 minifyEnabled=true 使用
            shrinkResources true
            // 指定混淆保留规则
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.sign
        }
        debug {
            debuggable true
            minifyEnabled false
            shrinkResources false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.sign
            //应用包名添加.debug后缀
            applicationIdSuffix ".debug"
            //禁用PNG压缩。
            crunchPngs false
            //停用Crashlytics，以提高调试 build 的构建速度
            ext.enableCrashlytics = false
        }
    }

    flavorDimensions "default"

    //获取渠道信息：Context.getMetaData("CHANNEL")
    productFlavors {
        huawei {}
        xiaomi {}
        oppo {}
        vivo {}
    }

    productFlavors.all { flavor ->
        flavor.manifestPlaceholders = [CHANNEL_VALUE: name]
    }

    applicationVariants.all {
        outputs.all {
            outputFileName = "wan-${buildType.name}-${versionName}-${productFlavors[0].getAt('name')}.apk"
        }
    }
}

kapt {
    useBuildCache = true
    // 增加注解处理器的最大错误次数,默认为 100。
    javacOptions {
        option("-Xmaxerrs", 500)
    }
}

dependencies {
    implementation project(path: ':module-user')
    implementation project(path: ':module-wan')
}